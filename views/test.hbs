<head>
  <script src='/scripts/peer.min.js'></script>
  <script>

  const peer = new Peer('{{key}}', {
    host: 'aleksailosey.com',
    port: 3000,
    path: '/',
    config: {
      'iceServers': [
        { url: 'stun:stun.l.google.com:19302' },
      ]}
  });
  var oppositeID = '{{#equals key 'test'}}test2{{else}}test{{/equals}}';
  var connection = peer.connect(oppositeID);
  navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
  var constraints = {
    video: {
      width: { ideal: 4096 },
      height: { ideal: 2160 }
    },
    audio: true
  }
  connection.on('open', function () {
    navigator.getWebcam(constraints, function(stream) {
      var call = peer.call(oppositeID, stream);
      call.on('stream', function(remoteStream) {
        // Show stream in some video/canvas element.
        // alert('call')
        document.getElementById('remote').srcObject = remoteStream;
      });
    }, function(err) {
      console.log('Failed to get local stream' ,err);
    });
  });
  peer.on('call', function(call) {
    navigator.getWebcam(constraints, function(stream) {
      call.answer(stream); // Answer the call with an A/V stream.
      call.on('stream', function(remoteStream) {
        // Show stream in some video/canvas element.
        console.log('received call')
        document.getElementById('remote').srcObject = remoteStream;
      });
    }, function(err) {
      console.log('Failed to get local stream' ,err);
    });
  });
  </script>
</head>
<body>
  <video id='remote' autoplay></video>
</body>
